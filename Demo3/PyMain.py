# coding=gbk
#__author__ = 'generated by py-ui4win'
import string, os, time

from PyUI import *
from MsgBox import *
from PyFrameBase import *
import UICommon
from CommonUtil import CommonUtils

class MainFrame(PyFrameBase):
    def __init__(self):
        super(MainFrame, self).__init__()
        self.clsName = self.__class__.__name__
        self.skinFileName = self.__class__.__name__ + '.xml'

    def GetSkinFile(self):
        return self.skinFileName

    def GetWindowClassName(self):
        return self.clsName

    def OnExit(self, sendor, wParam, lParam):
        self.ExitApp()

    def OnPrepare(self, sendor, wParam, lParam):
        self.LabelUIDescription = self.PyFindLabel("LabelUIDescription")
        self.LabelUI6 = self.PyFindLabel("LabelUI6")
        self.LabelUI4 = self.PyFindLabel("LabelUI4")
        self.LabelUIOS = self.PyFindLabel("LabelUIOS")
        self.LabelWaiting = self.PyFindLabel("LabelWaiting")
        self.LabelUI5 = self.PyFindLabel("LabelUI5")
        self.LabelUI2 = self.PyFindLabel("LabelUI2")
        self.LabelUI3 = self.PyFindLabel("LabelUI3")
        self.LabelUI12 = self.PyFindLabel("LabelUI12")
        self.LabelUI11 = self.PyFindLabel("LabelUI11")
        self.closebtn = self.PyFindButton("closebtn")
        self.BtnDownloadTooSlow = self.PyFindButton("BtnDownloadTooSlow")
        self.BtnWin7 = self.PyFindButton("BtnWin7")
        self.BtnXP = self.PyFindButton("BtnXP")
        self.ButtonUIReboot = self.PyFindButton("ButtonUIReboot")
        self.adv1 = self.PyFindButton("adv1")
        self.adv2 = self.PyFindButton("adv2")
        self.adv3 = self.PyFindButton("adv3")
        self.adv4 = self.PyFindButton("adv4")
        self.adv5 = self.PyFindButton("adv5")
        self.ProgressDownload = self.PyFindProgress("ProgressDownload")
        self.ContainerUITitle = self.PyFindContainer("ContainerUITitle")
        self.ContainerUIStep2 = self.PyFindContainer("ContainerUIStep2")
        self.ContainerUIStep1 = self.PyFindContainer("ContainerUIStep1")
        self.ContainerUIStep3 = self.PyFindContainer("ContainerUIStep3")
        self.ContainerUIBottom = self.PyFindContainer("ContainerUIBottom")
        self.VerticalLayoutUI1 = self.PyFindVerticalLayout("VerticalLayoutUI1")

        self.ContainerUIStep2.SetVisible(False)
        self.ContainerUIStep3.SetVisible(False)

    def OnNotify(self, sendor, sType, wParam, lParam):
        if sType == DUI_MSGTYPE_CLICK:
            if sendor == "closebtn":
                pass
            elif sendor == "BtnDownloadTooSlow":
                pass
            elif sendor == "BtnWin7" or sendor == "BtnXP":
                self.LabelUIOS.SetBkImage('win7.jpg') if sendor == "BtnWin7" else self.LabelUIOS.SetBkImage('xp.jpg')
                self.ProgressDownload.SetMaxValue(100)
                self.ProgressDownload.SetValue(0)
                self.LabelWaiting.SetText('开始下载，请耐心等待')

                self.ContainerUIStep1.SetVisible(False)
                self.ContainerUIStep2.SetVisible(True)
                self.ContainerUIStep3.SetVisible(False)
                pass
            elif sendor == "ButtonUIReboot":
                pass
            elif sendor == "adv1":
                pass
            elif sendor == "adv2":
                pass
            elif sendor == "adv3":
                pass
            elif sendor == "adv4":
                pass
            elif sendor == "adv5":
                pass

        if sType == DUI_MSGTYPE_ITEMSELECT:
            pass

def PyAppInit():
    CommonUtils.SaveExePath()
    pyFrameObj = PyFrameCreator()
    obj = pyFrameObj.CreateForm(0, 'PyMain', 'MainFrame', 'pyui4win界面示例')
    pyFrameObj.Show()
    CPaintManagerUI.MessageLoop()
